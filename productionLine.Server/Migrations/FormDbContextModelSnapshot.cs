// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using productionLine.Server.Model;

#nullable disable

namespace productionLine.Server.Migrations
{
    [DbContext(typeof(FormDbContext))]
    partial class FormDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("productionLine.Server.Model.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FormLink")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FORMLINK")
                        .HasAnnotation("Relational:JsonPropertyName", "formLink");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.ToTable("FF_FORM");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("APPROVALLEVEL");

                    b.Property<DateTime>("ApprovedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("APPROVALAT");

                    b.Property<int>("ApproverId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("APPROVERID");

                    b.Property<string>("ApproverName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("APPROVERNAME");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COMMENTS");

                    b.Property<int>("FormSubmissionId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FORMSUBMISSIONID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("FormSubmissionId");

                    b.ToTable("FF_FORMAPPROVAL");

                    b.HasAnnotation("Relational:JsonPropertyName", "approvals");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdObjectId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ADOBJECTID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("FormId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Level")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LEVEL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TYPE");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FF_FORMAPPROVER");

                    b.HasAnnotation("Relational:JsonPropertyName", "approvers");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("Columns")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ColumnsJson")
                        .HasColumnType("CLOB")
                        .HasColumnName("COLUMNS");

                    b.Property<bool?>("Decimal")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("DECIMAL");

                    b.Property<string>("FieldReferencesJson")
                        .HasColumnType("CLOB")
                        .HasColumnName("FIELD_REFERENCES");

                    b.Property<int>("FormId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FORMID");

                    b.Property<string>("Formula")
                        .HasColumnType("CLOB")
                        .HasColumnName("FORMULA");

                    b.Property<int?>("InitialRows")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("INITIAL_ROWS");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LABEL");

                    b.Property<double?>("Max")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("MAX");

                    b.Property<int?>("MaxRows")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MAX_ROWS");

                    b.Property<double?>("Min")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("MIN");

                    b.Property<int?>("MinRows")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MIN_ROWS");

                    b.Property<string>("Options")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("OptionsJson")
                        .HasColumnType("CLOB")
                        .HasColumnName("OPTIONS");

                    b.Property<int>("Order")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER");

                    b.Property<string>("RemarkTriggersJson")
                        .HasColumnType("CLOB")
                        .HasColumnName("REMARK_TRIGGERS");

                    b.Property<bool?>("RequireRemarksOutOfRange")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("REMARKS_OUT");

                    b.Property<bool>("Required")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("REQUIRED");

                    b.Property<string>("RequiresRemarks")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RequiresRemarksJson")
                        .HasColumnType("CLOB")
                        .HasColumnName("REQUIRES_REMARKS");

                    b.Property<bool?>("ResultDecimal")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("RESULT_DECIMAL");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Width")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("WIDTH");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FF_FORMFIELD");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FORMID");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SUBMITTEDAT");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SUBMITTEDBY");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FF_FORMSUBMISSION");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormSubmissionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FieldLabel")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FIELDLABEL");

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FIELDVALUE");

                    b.Property<int>("FormSubmissionId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FORMSUBMISSIONID");

                    b.HasKey("Id");

                    b.HasIndex("FormSubmissionId");

                    b.ToTable("FF_FORMSUBMISSIONDATA");

                    b.HasAnnotation("Relational:JsonPropertyName", "submissionData");
                });

            modelBuilder.Entity("productionLine.Server.Model.GridColumn", b =>
                {
                    b.Property<bool?>("Decimal")
                        .HasColumnType("BOOLEAN")
                        .HasAnnotation("Relational:JsonPropertyName", "decimal");

                    b.Property<string>("Formula")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasAnnotation("Relational:JsonPropertyName", "formula");

                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<double?>("Max")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasAnnotation("Relational:JsonPropertyName", "max");

                    b.Property<double?>("Min")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasAnnotation("Relational:JsonPropertyName", "min");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.PrimitiveCollection<string>("Options")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasAnnotation("Relational:JsonPropertyName", "options");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<string>("Width")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasAnnotation("Relational:JsonPropertyName", "width");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("productionLine.Server.Model.RemarkTrigger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("FormFieldId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("FORMFIELDID");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("OPERATOR");

                    b.Property<double>("Value")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("VALUE");

                    b.HasKey("Id");

                    b.HasIndex("FormFieldId");

                    b.ToTable("FF_REMARK_TRIGGER");
                });

            modelBuilder.Entity("productionLine.Server.Model.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATEDAT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CREATEDBY");

                    b.Property<string>("DefinitionJson")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DEFINITIONJSON");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("FormId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FORMID");

                    b.Property<string>("LayoutType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LAYOUTTYPE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATEDAT");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FF_REPORT");
                });

            modelBuilder.Entity("productionLine.Server.Model.ReportAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ACCESSTYPE");

                    b.Property<int>("ReportId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REPORTID");

                    b.Property<string>("UserOrGroupId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("USERGROUPID");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FF_REPORT_ACCESS");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormApproval", b =>
                {
                    b.HasOne("productionLine.Server.Model.FormSubmission", "FormSubmission")
                        .WithMany("Approvals")
                        .HasForeignKey("FormSubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormSubmission");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormApprover", b =>
                {
                    b.HasOne("productionLine.Server.Model.Form", "Form")
                        .WithMany("Approvers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormField", b =>
                {
                    b.HasOne("productionLine.Server.Model.Form", "Form")
                        .WithMany("Fields")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormSubmission", b =>
                {
                    b.HasOne("productionLine.Server.Model.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormSubmissionData", b =>
                {
                    b.HasOne("productionLine.Server.Model.FormSubmission", "FormSubmission")
                        .WithMany("SubmissionData")
                        .HasForeignKey("FormSubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormSubmission");
                });

            modelBuilder.Entity("productionLine.Server.Model.RemarkTrigger", b =>
                {
                    b.HasOne("productionLine.Server.Model.FormField", "FormField")
                        .WithMany("RemarkTriggers")
                        .HasForeignKey("FormFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormField");
                });

            modelBuilder.Entity("productionLine.Server.Model.Report", b =>
                {
                    b.HasOne("productionLine.Server.Model.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("productionLine.Server.Model.ReportAccess", b =>
                {
                    b.HasOne("productionLine.Server.Model.Report", "Report")
                        .WithMany("AccessList")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("productionLine.Server.Model.Form", b =>
                {
                    b.Navigation("Approvers");

                    b.Navigation("Fields");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormField", b =>
                {
                    b.Navigation("RemarkTriggers");
                });

            modelBuilder.Entity("productionLine.Server.Model.FormSubmission", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("SubmissionData");
                });

            modelBuilder.Entity("productionLine.Server.Model.Report", b =>
                {
                    b.Navigation("AccessList");
                });
#pragma warning restore 612, 618
        }
    }
}
